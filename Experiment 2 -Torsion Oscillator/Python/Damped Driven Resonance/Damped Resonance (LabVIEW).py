# -*- coding: utf-8 -*-
"""
Created on Tue Mar  9 14:52:22 2021

@author: Nathan
This is the plotting program using the fit parameters generated by Damped Resonance With LabVIEW Data Jupyer notebook.
"""


import pandas as pd
import numpy as np

import matplotlib as mpl 
import matplotlib.pyplot as plt  

import scipy as sp 
from scipy.optimize import curve_fit 

# c = 0.2
# w0 = 0.8927 # hz natural frequency of oscillator
# gamma = 0.378 # undamped 
N = 4000 # number of samples per data frame

# steady state amplitude
def res(f,C,f0,gamma):
    term1 = (2*np.pi*f0)**2 - (2*np.pi*f)**2
    term2 = 2*gamma*2*np.pi*f
    denom = np.sqrt(term1**2 + term2**2)
    return C/denom

freq = [0.1, 0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,1.1,1.2,1.3]  # array of driving frequencies
max_amp_arr = []

for i in range(0, len(freq)):
    f = freq[i]
    dresonance= pd.read_csv("{} hz.lvm".format(freq[i]), comment = '#', delim_whitespace=True, 
                            names=['time (s)', 'ang vel', 'ang position (theta)'])
    t = dresonance['ang position (theta)']
    t_max = np.amax(t)
    t_min = np.amin(t)
    t_max = abs(t_max - t_min)/2
    max_amp_arr.append(t_max)
    
for i in range(len(max_amp_arr)):
    print('i = ', i, max_amp_arr[i])
    
# Fitting Routine    
fit_params = [1.67, 0.877, 0.287] # [C, fo, gamma]
function = res  #name of fit function

xData = np.linspace(0.1, 1.5, 1010)
yData = res(xData, *fit_params)

plt.plot(xData, yData, label='Fit')
plt.plot(freq, max_amp_arr, marker='o', linestyle='None', mec='black', label='Data')
plt.xlabel('Driving Frequency (hz)', fontsize=16)
plt.ylabel('Maximum Amplitude (Rad)', fontsize=16)
plt.legend(fontsize=14)
plt.tight_layout()
plt.savefig('Damped Resonance LabVIEW (PDF).pdf', format='pdf')
plt.savefig('Damped Resonance LabVIEW (SVG).svg', format='svg')
plt.show()

